version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: padelyzer_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: padelyzer
      POSTGRES_PASSWORD: padelyzer_dev_2024
      POSTGRES_DB: padelyzer_db
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U padelyzer -d padelyzer_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - padelyzer_network

  # Opcional: PgAdmin para administrar la DB visualmente
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: padelyzer_pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@padelyzer.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - padelyzer_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  padelyzer_network:
    driver: bridge