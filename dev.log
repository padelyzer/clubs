
> bmad-nextjs-app@0.1.0 dev
> next dev

   ▲ Next.js 15.5.2
   - Local:        http://localhost:3000
   - Network:      http://192.168.100.41:3000
   - Environments: .env.local, .env.development, .env

 ✓ Starting...
 ✓ Ready in 1511ms
 ✓ Compiled /middleware in 120ms (159 modules)
 ○ Compiling / ...
 ✓ Compiled / in 707ms (675 modules)
 GET / 307 in 968ms
 ○ Compiling /c/[clubSlug]/dashboard/bookings ...
 ✓ Compiled /c/[clubSlug]/dashboard/bookings in 977ms (2155 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 5602ms
 ○ Compiling /api/settings/club ...
 ✓ Compiled /api/settings/club in 643ms (2573 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
 GET /api/health 200 in 2476ms
prisma:query COMMIT
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query BEGIN
prisma:query COMMIT
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query COMMIT
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."clubId" = $1 ORDER BY "public"."Court"."order" ASC OFFSET $2
prisma:query BEGIN
prisma:query COMMIT
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query COMMIT
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."postalCode", "public"."Club"."country", "public"."Club"."website", "public"."Club"."description", "public"."Club"."logo", "public"."Club"."active", "public"."Club"."status"::text FROM "public"."Club" WHERE ("public"."Club"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query COMMIT
 GET /api/settings/club 200 in 3505ms
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query COMMIT
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query COMMIT
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query COMMIT
 GET /api/bookings?date=2025-09-23 200 in 3807ms
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
 GET /api/settings/courts 200 in 3839ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query COMMIT
 ○ Compiling /api/settings/payments ...
prisma:query BEGIN
prisma:query DEALLOCATE ALL
 ✓ Compiled /api/settings/payments in 622ms (2576 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."postalCode", "public"."Club"."country", "public"."Club"."website", "public"."Club"."description", "public"."Club"."logo", "public"."Club"."active", "public"."Club"."status"::text FROM "public"."Club" WHERE ("public"."Club"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
 GET /api/settings/club 200 in 1794ms
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."clubId" = $1 ORDER BY "public"."Court"."order" ASC OFFSET $2
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query COMMIT
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query BEGIN
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query BEGIN
prisma:query BEGIN
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query COMMIT
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."PaymentProvider"."id", "public"."PaymentProvider"."clubId", "public"."PaymentProvider"."providerId", "public"."PaymentProvider"."name", "public"."PaymentProvider"."enabled", "public"."PaymentProvider"."config", "public"."PaymentProvider"."fees", "public"."PaymentProvider"."createdAt", "public"."PaymentProvider"."updatedAt" FROM "public"."PaymentProvider" WHERE "public"."PaymentProvider"."clubId" = $1 ORDER BY "public"."PaymentProvider"."createdAt" ASC OFFSET $2
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query COMMIT
prisma:query BEGIN
prisma:query COMMIT
 GET /api/settings/payments 200 in 3214ms
prisma:query COMMIT
 GET /api/settings/courts 200 in 2792ms
prisma:query DEALLOCATE ALL
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query COMMIT
 GET /api/bookings?date=2025-09-23 200 in 4042ms
prisma:query BEGIN
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."PaymentProvider"."id", "public"."PaymentProvider"."clubId", "public"."PaymentProvider"."providerId", "public"."PaymentProvider"."name", "public"."PaymentProvider"."enabled", "public"."PaymentProvider"."config", "public"."PaymentProvider"."fees", "public"."PaymentProvider"."createdAt", "public"."PaymentProvider"."updatedAt" FROM "public"."PaymentProvider" WHERE "public"."PaymentProvider"."clubId" = $1 ORDER BY "public"."PaymentProvider"."createdAt" ASC OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query COMMIT
 GET /api/settings/payments 200 in 1657ms
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE "public"."Booking"."bookingGroupId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingGroupId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1,$2,$3) OFFSET $4
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query COMMIT
 GET /api/bookings?date=2025-09-24 200 in 3027ms
 ✓ Compiled /api/settings/courts in 1808ms (2169 modules)
 ✓ Compiled in 0ms (1622 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query COMMIT
prisma:query BEGIN
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query DEALLOCATE ALL
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query COMMIT
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."clubId" = $1 ORDER BY "public"."Court"."order" ASC OFFSET $2
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query BEGIN
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query BEGIN
prisma:query BEGIN
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query BEGIN
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."postalCode", "public"."Club"."country", "public"."Club"."website", "public"."Club"."description", "public"."Club"."logo", "public"."Club"."active", "public"."Club"."status"::text FROM "public"."Club" WHERE ("public"."Club"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
 GET /api/settings/club 200 in 3267ms
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1) OFFSET $2
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 2982ms
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
 ✓ Compiled /api/settings/payments in 224ms (1625 modules)
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
 GET /api/bookings?date=2025-09-23 200 in 3733ms
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
 GET /api/settings/courts 200 in 3746ms
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."PaymentProvider"."id", "public"."PaymentProvider"."clubId", "public"."PaymentProvider"."providerId", "public"."PaymentProvider"."name", "public"."PaymentProvider"."enabled", "public"."PaymentProvider"."config", "public"."PaymentProvider"."fees", "public"."PaymentProvider"."createdAt", "public"."PaymentProvider"."updatedAt" FROM "public"."PaymentProvider" WHERE "public"."PaymentProvider"."clubId" = $1 ORDER BY "public"."PaymentProvider"."createdAt" ASC OFFSET $2
prisma:query COMMIT
 GET /api/settings/payments 200 in 1926ms
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query SELECT 1
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 2155ms
 ✓ Compiled /api/health in 276ms (1627 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT 1
prisma:query COMMIT
 GET /api/health 200 in 1403ms
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."clubId" = $1 ORDER BY "public"."Court"."order" ASC OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query COMMIT
prisma:query COMMIT
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query BEGIN
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query BEGIN
prisma:query COMMIT
prisma:query COMMIT
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."postalCode", "public"."Club"."country", "public"."Club"."website", "public"."Club"."description", "public"."Club"."logo", "public"."Club"."active", "public"."Club"."status"::text FROM "public"."Club" WHERE ("public"."Club"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query COMMIT
 GET /api/settings/club 200 in 3274ms
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query COMMIT
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query COMMIT
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query BEGIN
prisma:query COMMIT
prisma:query COMMIT
 GET /api/settings/courts 200 in 3437ms
prisma:query BEGIN
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1) OFFSET $2
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query BEGIN
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."clubId" = $1 ORDER BY "public"."Court"."order" ASC OFFSET $2
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query COMMIT
 GET /api/bookings?date=2025-09-23 200 in 4390ms
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."postalCode", "public"."Club"."country", "public"."Club"."website", "public"."Club"."description", "public"."Club"."logo", "public"."Club"."active", "public"."Club"."status"::text FROM "public"."Club" WHERE ("public"."Club"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."PaymentProvider"."id", "public"."PaymentProvider"."clubId", "public"."PaymentProvider"."providerId", "public"."PaymentProvider"."name", "public"."PaymentProvider"."enabled", "public"."PaymentProvider"."config", "public"."PaymentProvider"."fees", "public"."PaymentProvider"."createdAt", "public"."PaymentProvider"."updatedAt" FROM "public"."PaymentProvider" WHERE "public"."PaymentProvider"."clubId" = $1 ORDER BY "public"."PaymentProvider"."createdAt" ASC OFFSET $2
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query DEALLOCATE ALL
prisma:query COMMIT
 GET /api/settings/payments 200 in 1184ms
prisma:query COMMIT
 GET /api/settings/club 200 in 1184ms
prisma:query BEGIN
prisma:query BEGIN
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query BEGIN
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query COMMIT
prisma:query BEGIN
prisma:query COMMIT
prisma:query COMMIT
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query BEGIN
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE "public"."Booking"."bookingGroupId" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1,$2) OFFSET $3
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingGroupId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query COMMIT
 GET /api/settings/courts 200 in 1710ms
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query COMMIT
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query BEGIN
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."PaymentProvider"."id", "public"."PaymentProvider"."clubId", "public"."PaymentProvider"."providerId", "public"."PaymentProvider"."name", "public"."PaymentProvider"."enabled", "public"."PaymentProvider"."config", "public"."PaymentProvider"."fees", "public"."PaymentProvider"."createdAt", "public"."PaymentProvider"."updatedAt" FROM "public"."PaymentProvider" WHERE "public"."PaymentProvider"."clubId" = $1 ORDER BY "public"."PaymentProvider"."createdAt" ASC OFFSET $2
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
 GET /api/settings/payments 200 in 1195ms
prisma:query COMMIT
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query BEGIN
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1,$2) OFFSET $3
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query COMMIT
prisma:query COMMIT
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query COMMIT
 GET /api/bookings?date=2025-09-24 200 in 3069ms
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query COMMIT
 GET /api/bookings?date=2025-09-23 200 in 2698ms
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query SELECT 1
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query COMMIT
 GET /api/bookings?date=2025-09-25 200 in 2296ms
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE "public"."Booking"."bookingGroupId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingGroupId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1,$2,$3) OFFSET $4
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query COMMIT
 GET /api/bookings?date=2025-09-24 200 in 2979ms
 ○ Compiling /api/bookings/[id]/split-payments ...
 ✓ Compiled /api/bookings/[id]/split-payments in 1218ms (2806 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE ("public"."Booking"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt" FROM "public"."SplitPayment" WHERE "public"."SplitPayment"."bookingId" IN ($1) ORDER BY "public"."SplitPayment"."createdAt" ASC OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
[Check Payment] Checking payment for booking: 7a9493bf-0972-4497-aa38-2ccad5145296
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."country", "public"."Club"."postalCode", "public"."Club"."website", "public"."Club"."logo", "public"."Club"."description", "public"."Club"."status"::text, "public"."Club"."active", "public"."Club"."stripeAccountId", "public"."Club"."stripeOnboardingCompleted", "public"."Club"."stripePayoutsEnabled", "public"."Club"."stripeChargesEnabled", "public"."Club"."stripeDetailsSubmitted", "public"."Club"."stripeRequirements", "public"."Club"."stripeCommissionRate", "public"."Club"."createdAt", "public"."Club"."updatedAt", "public"."Club"."approvedAt", "public"."Club"."approvedBy", "public"."Club"."whatsappNumber", "public"."Club"."initialSetupCompleted", "public"."Club"."initialSetupCompletedAt" FROM "public"."Club" WHERE "public"."Club"."id" IN ($1) OFFSET $2
prisma:query COMMIT
 GET /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296/split-payments 200 in 4584ms
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE ("public"."Booking"."id" = $1 AND "public"."Booking"."clubId" = $2) LIMIT $3 OFFSET $4
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query SELECT "public"."Payment"."id", "public"."Payment"."bookingId", "public"."Payment"."amount", "public"."Payment"."currency", "public"."Payment"."method"::text, "public"."Payment"."status"::text, "public"."Payment"."stripePaymentIntentId", "public"."Payment"."stripeChargeId", "public"."Payment"."stripeApplicationFee", "public"."Payment"."stripeTransferId", "public"."Payment"."createdAt", "public"."Payment"."updatedAt", "public"."Payment"."completedAt", "public"."Payment"."bookingGroupId" FROM "public"."Payment" WHERE ("public"."Payment"."status" = CAST($1::text AS "public"."PaymentStatus") AND "public"."Payment"."bookingId" IN ($2)) ORDER BY "public"."Payment"."createdAt" DESC LIMIT $3 OFFSET $4
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt" FROM "public"."SplitPayment" WHERE ("public"."SplitPayment"."status" = CAST($1::text AS "public"."PaymentStatus") AND "public"."SplitPayment"."bookingId" IN ($2)) OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
 GET /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296/check-payment 200 in 4962ms
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE ("public"."Booking"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt" FROM "public"."SplitPayment" WHERE "public"."SplitPayment"."bookingId" IN ($1) ORDER BY "public"."SplitPayment"."createdAt" ASC OFFSET $2
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."country", "public"."Club"."postalCode", "public"."Club"."website", "public"."Club"."logo", "public"."Club"."description", "public"."Club"."status"::text, "public"."Club"."active", "public"."Club"."stripeAccountId", "public"."Club"."stripeOnboardingCompleted", "public"."Club"."stripePayoutsEnabled", "public"."Club"."stripeChargesEnabled", "public"."Club"."stripeDetailsSubmitted", "public"."Club"."stripeRequirements", "public"."Club"."stripeCommissionRate", "public"."Club"."createdAt", "public"."Club"."updatedAt", "public"."Club"."approvedAt", "public"."Club"."approvedBy", "public"."Club"."whatsappNumber", "public"."Club"."initialSetupCompleted", "public"."Club"."initialSetupCompletedAt" FROM "public"."Club" WHERE "public"."Club"."id" IN ($1) OFFSET $2
prisma:query COMMIT
 GET /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296/split-payments 200 in 1217ms
 ✓ Compiled in 1522ms (2169 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 3067ms
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query SELECT 1
prisma:query BEGIN
prisma:query SELECT 1
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 1593ms
 ✓ Compiled /api/settings/courts in 259ms (1223 modules)
 ✓ Compiled (1624 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT 1
prisma:query COMMIT
 GET /api/health 200 in 2557ms
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query COMMIT
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."clubId" = $1 ORDER BY "public"."Court"."order" ASC OFFSET $2
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."postalCode", "public"."Club"."country", "public"."Club"."website", "public"."Club"."description", "public"."Club"."logo", "public"."Club"."active", "public"."Club"."status"::text FROM "public"."Club" WHERE ("public"."Club"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
 GET /api/settings/club 200 in 3905ms
prisma:query BEGIN
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query DEALLOCATE ALL
prisma:query BEGIN
 ✓ Compiled /api/settings/payments in 104ms (1627 modules)
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query BEGIN
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query COMMIT
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query COMMIT
 GET /api/settings/courts 200 in 4642ms
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query BEGIN
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query COMMIT
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query COMMIT
prisma:query BEGIN
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."postalCode", "public"."Club"."country", "public"."Club"."website", "public"."Club"."description", "public"."Club"."logo", "public"."Club"."active", "public"."Club"."status"::text FROM "public"."Club" WHERE ("public"."Club"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query COMMIT
 GET /api/settings/club 200 in 1940ms
prisma:query SELECT "public"."PaymentProvider"."id", "public"."PaymentProvider"."clubId", "public"."PaymentProvider"."providerId", "public"."PaymentProvider"."name", "public"."PaymentProvider"."enabled", "public"."PaymentProvider"."config", "public"."PaymentProvider"."fees", "public"."PaymentProvider"."createdAt", "public"."PaymentProvider"."updatedAt" FROM "public"."PaymentProvider" WHERE "public"."PaymentProvider"."clubId" = $1 ORDER BY "public"."PaymentProvider"."createdAt" ASC OFFSET $2
prisma:query DEALLOCATE ALL
prisma:query COMMIT
 GET /api/settings/payments 200 in 2016ms
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."clubId" = $1 ORDER BY "public"."Court"."order" ASC OFFSET $2
prisma:query COMMIT
 GET /api/bookings?date=2025-09-23 200 in 6046ms
prisma:query BEGIN
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query COMMIT
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."clubId", "public"."ClubSettings"."slotDuration", "public"."ClubSettings"."bufferTime", "public"."ClubSettings"."advanceBookingDays", "public"."ClubSettings"."allowSameDayBooking", "public"."ClubSettings"."currency", "public"."ClubSettings"."taxIncluded", "public"."ClubSettings"."taxRate", "public"."ClubSettings"."cancellationFee", "public"."ClubSettings"."noShowFee", "public"."ClubSettings"."createdAt", "public"."ClubSettings"."updatedAt", "public"."ClubSettings"."operatingHours", "public"."ClubSettings"."timezone", "public"."ClubSettings"."acceptCash", "public"."ClubSettings"."accountHolder", "public"."ClubSettings"."accountNumber", "public"."ClubSettings"."bankName", "public"."ClubSettings"."clabe", "public"."ClubSettings"."terminalEnabled", "public"."ClubSettings"."terminalId", "public"."ClubSettings"."transferEnabled" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."status" <> CAST($2::text AS "public"."BookingStatus")) OFFSET $3) AS "sub"
prisma:query SELECT COUNT(*) FROM (SELECT "public"."Booking"."id" FROM "public"."Booking" WHERE ("public"."Booking"."courtId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."status" IN (CAST($3::text AS "public"."BookingStatus"),CAST($4::text AS "public"."BookingStatus"))) OFFSET $5) AS "sub"
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
prisma:query COMMIT
 GET /api/settings/courts 200 in 2317ms
prisma:query BEGIN
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query DEALLOCATE ALL
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query SELECT "public"."PaymentProvider"."id", "public"."PaymentProvider"."clubId", "public"."PaymentProvider"."providerId", "public"."PaymentProvider"."name", "public"."PaymentProvider"."enabled", "public"."PaymentProvider"."config", "public"."PaymentProvider"."fees", "public"."PaymentProvider"."createdAt", "public"."PaymentProvider"."updatedAt" FROM "public"."PaymentProvider" WHERE "public"."PaymentProvider"."clubId" = $1 ORDER BY "public"."PaymentProvider"."createdAt" ASC OFFSET $2
prisma:query DEALLOCATE ALL
prisma:query COMMIT
 GET /api/settings/payments 200 in 1280ms
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query COMMIT
 GET /api/bookings?date=2025-09-23 200 in 2868ms
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query SELECT 1
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubSettings"."id", "public"."ClubSettings"."timezone" FROM "public"."ClubSettings" WHERE ("public"."ClubSettings"."clubId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."BookingGroup"."id", "public"."BookingGroup"."clubId", "public"."BookingGroup"."date", "public"."BookingGroup"."startTime", "public"."BookingGroup"."endTime", "public"."BookingGroup"."duration", "public"."BookingGroup"."playerName", "public"."BookingGroup"."playerEmail", "public"."BookingGroup"."playerPhone", "public"."BookingGroup"."totalPlayers", "public"."BookingGroup"."price", "public"."BookingGroup"."currency", "public"."BookingGroup"."status"::text, "public"."BookingGroup"."splitPaymentEnabled", "public"."BookingGroup"."splitPaymentCount", "public"."BookingGroup"."notes", "public"."BookingGroup"."createdAt", "public"."BookingGroup"."updatedAt", "public"."BookingGroup"."cancelledAt", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_splitPayments", 0) AS "_aggr_count_splitPayments", COALESCE("aggr_selection_1_Payment"."_aggr_count_payments", 0) AS "_aggr_count_payments", COALESCE("aggr_selection_2_Booking"."_aggr_count_bookings", 0) AS "_aggr_count_bookings" FROM "public"."BookingGroup" LEFT JOIN (SELECT "public"."SplitPayment"."bookingGroupId", COUNT(*) AS "_aggr_count_splitPayments" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingGroupId") AS "aggr_selection_0_SplitPayment" ON ("public"."BookingGroup"."id" = "aggr_selection_0_SplitPayment"."bookingGroupId") LEFT JOIN (SELECT "public"."Payment"."bookingGroupId", COUNT(*) AS "_aggr_count_payments" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingGroupId") AS "aggr_selection_1_Payment" ON ("public"."BookingGroup"."id" = "aggr_selection_1_Payment"."bookingGroupId") LEFT JOIN (SELECT "public"."Booking"."bookingGroupId", COUNT(*) AS "_aggr_count_bookings" FROM "public"."Booking" WHERE 1=1 GROUP BY "public"."Booking"."bookingGroupId") AS "aggr_selection_2_Booking" ON ("public"."BookingGroup"."id" = "aggr_selection_2_Booking"."bookingGroupId") WHERE ("public"."BookingGroup"."clubId" = $1 AND "public"."BookingGroup"."date" >= $2 AND "public"."BookingGroup"."date" < $3 AND "public"."BookingGroup"."status" <> CAST($4::text AS "public"."BookingStatus")) ORDER BY "public"."BookingGroup"."date" ASC, "public"."BookingGroup"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE "public"."Booking"."bookingGroupId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingGroupId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId", COALESCE("aggr_selection_0_SplitPayment"."_aggr_count_SplitPayment", 0) AS "_aggr_count_SplitPayment", COALESCE("aggr_selection_1_Payment"."_aggr_count_Payment", 0) AS "_aggr_count_Payment" FROM "public"."Booking" LEFT JOIN (SELECT "public"."SplitPayment"."bookingId", COUNT(*) AS "_aggr_count_SplitPayment" FROM "public"."SplitPayment" WHERE 1=1 GROUP BY "public"."SplitPayment"."bookingId") AS "aggr_selection_0_SplitPayment" ON ("public"."Booking"."id" = "aggr_selection_0_SplitPayment"."bookingId") LEFT JOIN (SELECT "public"."Payment"."bookingId", COUNT(*) AS "_aggr_count_Payment" FROM "public"."Payment" WHERE 1=1 GROUP BY "public"."Payment"."bookingId") AS "aggr_selection_1_Payment" ON ("public"."Booking"."id" = "aggr_selection_1_Payment"."bookingId") WHERE ("public"."Booking"."clubId" = $1 AND "public"."Booking"."date" >= $2 AND "public"."Booking"."date" < $3 AND "public"."Booking"."status" <> CAST($4::text AS "public"."BookingStatus") AND "public"."Booking"."bookingGroupId" IS NULL) ORDER BY "public"."Booking"."date" ASC, "public"."Booking"."startTime" ASC OFFSET $5
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt", COALESCE("aggr_selection_0_Notification"."_aggr_count_Notification", 0) AS "_aggr_count_Notification" FROM "public"."SplitPayment" LEFT JOIN (SELECT "public"."Notification"."splitPaymentId", COUNT(*) AS "_aggr_count_Notification" FROM "public"."Notification" WHERE 1=1 GROUP BY "public"."Notification"."splitPaymentId") AS "aggr_selection_0_Notification" ON ("public"."SplitPayment"."id" = "aggr_selection_0_Notification"."splitPaymentId") WHERE "public"."SplitPayment"."bookingId" IN ($1,$2,$3) OFFSET $4
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Class"."id", "public"."Class"."clubId", "public"."Class"."courtId", "public"."Class"."name", "public"."Class"."description", "public"."Class"."instructorId", "public"."Class"."instructorName", "public"."Class"."level"::text, "public"."Class"."type"::text, "public"."Class"."maxStudents", "public"."Class"."enrolledCount", "public"."Class"."price", "public"."Class"."currency", "public"."Class"."date", "public"."Class"."startTime", "public"."Class"."endTime", "public"."Class"."duration", "public"."Class"."status"::text, "public"."Class"."recurring", "public"."Class"."recurringDays", "public"."Class"."notes", "public"."Class"."createdAt", "public"."Class"."updatedAt", "public"."Class"."cancelledAt", COALESCE("aggr_selection_0_ClassEnrollment"."_aggr_count_ClassEnrollment", 0) AS "_aggr_count_ClassEnrollment" FROM "public"."Class" LEFT JOIN (SELECT "public"."ClassEnrollment"."classId", COUNT(*) AS "_aggr_count_ClassEnrollment" FROM "public"."ClassEnrollment" WHERE 1=1 GROUP BY "public"."ClassEnrollment"."classId") AS "aggr_selection_0_ClassEnrollment" ON ("public"."Class"."id" = "aggr_selection_0_ClassEnrollment"."classId") WHERE ("public"."Class"."clubId" = $1 AND "public"."Class"."date" >= $2 AND "public"."Class"."date" < $3 AND "public"."Class"."status" <> CAST($4::text AS "public"."ClassStatus")) ORDER BY "public"."Class"."date" ASC, "public"."Class"."startTime" ASC OFFSET $5
prisma:query COMMIT
 GET /api/bookings?date=2025-09-24 200 in 2729ms
 ✓ Compiled /api/bookings/[id]/check-payment in 427ms (1623 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
[Check Payment] Checking payment for booking: 7a9493bf-0972-4497-aa38-2ccad5145296
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE ("public"."Booking"."id" = $1 AND "public"."Booking"."clubId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Payment"."id", "public"."Payment"."bookingId", "public"."Payment"."amount", "public"."Payment"."currency", "public"."Payment"."method"::text, "public"."Payment"."status"::text, "public"."Payment"."stripePaymentIntentId", "public"."Payment"."stripeChargeId", "public"."Payment"."stripeApplicationFee", "public"."Payment"."stripeTransferId", "public"."Payment"."createdAt", "public"."Payment"."updatedAt", "public"."Payment"."completedAt", "public"."Payment"."bookingGroupId" FROM "public"."Payment" WHERE ("public"."Payment"."status" = CAST($1::text AS "public"."PaymentStatus") AND "public"."Payment"."bookingId" IN ($2)) ORDER BY "public"."Payment"."createdAt" DESC LIMIT $3 OFFSET $4
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt" FROM "public"."SplitPayment" WHERE ("public"."SplitPayment"."status" = CAST($1::text AS "public"."PaymentStatus") AND "public"."SplitPayment"."bookingId" IN ($2)) OFFSET $3
 ✓ Compiled /api/bookings/[id]/split-payments in 284ms (1851 modules)
prisma:query COMMIT
 GET /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296/check-payment 200 in 2134ms
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE ("public"."Booking"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt" FROM "public"."SplitPayment" WHERE "public"."SplitPayment"."bookingId" IN ($1) ORDER BY "public"."SplitPayment"."createdAt" ASC OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
[Check Payment] Checking payment for booking: 7a9493bf-0972-4497-aa38-2ccad5145296
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."country", "public"."Club"."postalCode", "public"."Club"."website", "public"."Club"."logo", "public"."Club"."description", "public"."Club"."status"::text, "public"."Club"."active", "public"."Club"."stripeAccountId", "public"."Club"."stripeOnboardingCompleted", "public"."Club"."stripePayoutsEnabled", "public"."Club"."stripeChargesEnabled", "public"."Club"."stripeDetailsSubmitted", "public"."Club"."stripeRequirements", "public"."Club"."stripeCommissionRate", "public"."Club"."createdAt", "public"."Club"."updatedAt", "public"."Club"."approvedAt", "public"."Club"."approvedBy", "public"."Club"."whatsappNumber", "public"."Club"."initialSetupCompleted", "public"."Club"."initialSetupCompletedAt" FROM "public"."Club" WHERE "public"."Club"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE ("public"."Booking"."id" = $1 AND "public"."Booking"."clubId" = $2) LIMIT $3 OFFSET $4
 GET /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296/split-payments 200 in 2489ms
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query SELECT "public"."Payment"."id", "public"."Payment"."bookingId", "public"."Payment"."amount", "public"."Payment"."currency", "public"."Payment"."method"::text, "public"."Payment"."status"::text, "public"."Payment"."stripePaymentIntentId", "public"."Payment"."stripeChargeId", "public"."Payment"."stripeApplicationFee", "public"."Payment"."stripeTransferId", "public"."Payment"."createdAt", "public"."Payment"."updatedAt", "public"."Payment"."completedAt", "public"."Payment"."bookingGroupId" FROM "public"."Payment" WHERE ("public"."Payment"."status" = CAST($1::text AS "public"."PaymentStatus") AND "public"."Payment"."bookingId" IN ($2)) ORDER BY "public"."Payment"."createdAt" DESC LIMIT $3 OFFSET $4
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt" FROM "public"."SplitPayment" WHERE ("public"."SplitPayment"."status" = CAST($1::text AS "public"."PaymentStatus") AND "public"."SplitPayment"."bookingId" IN ($2)) OFFSET $3
prisma:query COMMIT
 GET /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296/check-payment 200 in 2423ms
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE ("public"."Booking"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt" FROM "public"."SplitPayment" WHERE "public"."SplitPayment"."bookingId" IN ($1) ORDER BY "public"."SplitPayment"."createdAt" ASC OFFSET $2
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."country", "public"."Club"."postalCode", "public"."Club"."website", "public"."Club"."logo", "public"."Club"."description", "public"."Club"."status"::text, "public"."Club"."active", "public"."Club"."stripeAccountId", "public"."Club"."stripeOnboardingCompleted", "public"."Club"."stripePayoutsEnabled", "public"."Club"."stripeChargesEnabled", "public"."Club"."stripeDetailsSubmitted", "public"."Club"."stripeRequirements", "public"."Club"."stripeCommissionRate", "public"."Club"."createdAt", "public"."Club"."updatedAt", "public"."Club"."approvedAt", "public"."Club"."approvedBy", "public"."Club"."whatsappNumber", "public"."Club"."initialSetupCompleted", "public"."Club"."initialSetupCompletedAt" FROM "public"."Club" WHERE "public"."Club"."id" IN ($1) OFFSET $2
prisma:query COMMIT
 GET /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296/split-payments 200 in 1947ms
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:error 
Invalid `prisma.splitPayment.findUnique()` invocation:

{
  where: {
    id: "split_7a9493bf-0972-4497-aa38-2ccad5145296_1_1758688498925"
  },
  include: {
    booking: {
    ~~~~~~~
      include: {
        Court: true,
        Club: true
      }
    },
?   Notification?: true,
?   BookingGroup?: true,
?   Booking?: true
  }
}

Unknown field `booking` for include statement on model `SplitPayment`. Available options are marked with ?.
file:///Users/ja/v4/bmad-nextjs-app/node_modules/@prisma/client/runtime/library.js: Invalid source map. Only conformant source maps can be used to find the original code. Cause: TypeError [ERR_INVALID_ARG_TYPE]: The "payload" argument must be of type object. Received null
Error processing split payment action: Error [PrismaClientValidationError]: 
Invalid `prisma.splitPayment.findUnique()` invocation:

{
  where: {
    id: "split_7a9493bf-0972-4497-aa38-2ccad5145296_1_1758688498925"
  },
  include: {
    booking: {
    ~~~~~~~
      include: {
        Court: true,
        Club: true
      }
    },
?   Notification?: true,
?   BookingGroup?: true,
?   Booking?: true
  }
}

Unknown field `booking` for include statement on model `SplitPayment`. Available options are marked with ?.
    at async resendSplitPaymentNotification (lib/payments/split-payment.ts:304:24)
    at async PUT (app/api/bookings/[id]/split-payments/route.ts:254:20)
  302 |
  303 | export async function resendSplitPaymentNotification(splitPaymentId: string) {
> 304 |   const splitPayment = await prisma.splitPayment.findUnique({
      |                        ^
  305 |     where: { id: splitPaymentId },
  306 |     include: {
  307 |       booking: { {
  clientVersion: '5.22.0'
}
 PUT /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296/split-payments 500 in 637ms
 ✓ Compiled in 1243ms (2169 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
 ✓ Compiled /api/bookings/[id] in 263ms (1452 modules)
 ✓ Compiled in 129ms (949 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query COMMIT
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Booking"."id", "public"."Booking"."clubId", "public"."Booking"."courtId", "public"."Booking"."date", "public"."Booking"."startTime", "public"."Booking"."endTime", "public"."Booking"."duration", "public"."Booking"."playerName", "public"."Booking"."playerEmail", "public"."Booking"."playerPhone", "public"."Booking"."totalPlayers", "public"."Booking"."price", "public"."Booking"."currency", "public"."Booking"."paymentStatus"::text, "public"."Booking"."paymentType"::text, "public"."Booking"."status"::text, "public"."Booking"."checkedIn", "public"."Booking"."checkedInAt", "public"."Booking"."checkedInBy", "public"."Booking"."splitPaymentEnabled", "public"."Booking"."splitPaymentCount", "public"."Booking"."notes", "public"."Booking"."createdAt", "public"."Booking"."updatedAt", "public"."Booking"."cancelledAt", "public"."Booking"."bookingGroupId" FROM "public"."Booking" WHERE ("public"."Booking"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."SplitPayment"."id", "public"."SplitPayment"."bookingId", "public"."SplitPayment"."playerName", "public"."SplitPayment"."playerEmail", "public"."SplitPayment"."playerPhone", "public"."SplitPayment"."amount", "public"."SplitPayment"."status"::text, "public"."SplitPayment"."stripePaymentIntentId", "public"."SplitPayment"."stripeChargeId", "public"."SplitPayment"."stripeApplicationFee", "public"."SplitPayment"."stripeTransferId", "public"."SplitPayment"."createdAt", "public"."SplitPayment"."updatedAt", "public"."SplitPayment"."completedAt", "public"."SplitPayment"."bookingGroupId", "public"."SplitPayment"."paidAt" FROM "public"."SplitPayment" WHERE "public"."SplitPayment"."bookingId" IN ($1) ORDER BY "public"."SplitPayment"."createdAt" ASC OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
Error: Route "/api/bookings/[id]" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at GET (app/api/bookings/[id]/route.ts:31:13)
  29 |     
  30 |     const session = await requireStaffAuth()
> 31 |     const { id } = params
     |             ^
  32 |
  33 |     const booking = await prisma.booking.findFirst({
  34 |       where: {
prisma:error 
Invalid `prisma.booking.findFirst()` invocation:

{
  where: {
    id: "7a9493bf-0972-4497-aa38-2ccad5145296",
    clubId: "90e75af6-4ef5-49bf-adb3-a6f2a78e2e8d"
  },
  include: {
    court: true,
    ~~~~~
    splitPayments: {
      orderBy: {
        createdAt: "asc"
      }
    },
    payments: {
      orderBy: {
        createdAt: "desc"
      }
    },
    notifications: {
      orderBy: {
        createdAt: "desc"
      }
    },
?   BookingGroup?: true,
?   Club?: true,
?   Court?: true,
?   Notification?: true,
?   Payment?: true,
?   SplitPayment?: true,
?   Transaction?: true
  }
}

Unknown field `court` for include statement on model `Booking`. Available options are marked with ?.
file:///Users/ja/v4/bmad-nextjs-app/node_modules/@prisma/client/runtime/library.js: Invalid source map. Only conformant source maps can be used to find the original code. Cause: TypeError [ERR_INVALID_ARG_TYPE]: The "payload" argument must be of type object. Received null
Error fetching booking: Error [PrismaClientValidationError]: 
Invalid `prisma.booking.findFirst()` invocation:

{
  where: {
    id: "7a9493bf-0972-4497-aa38-2ccad5145296",
    clubId: "90e75af6-4ef5-49bf-adb3-a6f2a78e2e8d"
  },
  include: {
    court: true,
    ~~~~~
    splitPayments: {
      orderBy: {
        createdAt: "asc"
      }
    },
    payments: {
      orderBy: {
        createdAt: "desc"
      }
    },
    notifications: {
      orderBy: {
        createdAt: "desc"
      }
    },
?   BookingGroup?: true,
?   Club?: true,
?   Court?: true,
?   Notification?: true,
?   Payment?: true,
?   SplitPayment?: true,
?   Transaction?: true
  }
}

Unknown field `court` for include statement on model `Booking`. Available options are marked with ?.
    at async GET (app/api/bookings/[id]/route.ts:33:21)
  31 |     const { id } = params
  32 |
> 33 |     const booking = await prisma.booking.findFirst({
     |                     ^
  34 |       where: {
  35 |         id,
  36 |         clubId: session.clubId {
  clientVersion: '5.22.0'
}
 GET /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296 500 in 2345ms
prisma:query SELECT "public"."Court"."id", "public"."Court"."clubId", "public"."Court"."name", "public"."Court"."type"::text, "public"."Court"."indoor", "public"."Court"."order", "public"."Court"."active", "public"."Court"."createdAt", "public"."Court"."updatedAt" FROM "public"."Court" WHERE "public"."Court"."id" IN ($1) OFFSET $2
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."slug", "public"."Club"."email", "public"."Club"."phone", "public"."Club"."address", "public"."Club"."city", "public"."Club"."state", "public"."Club"."country", "public"."Club"."postalCode", "public"."Club"."website", "public"."Club"."logo", "public"."Club"."description", "public"."Club"."status"::text, "public"."Club"."active", "public"."Club"."stripeAccountId", "public"."Club"."stripeOnboardingCompleted", "public"."Club"."stripePayoutsEnabled", "public"."Club"."stripeChargesEnabled", "public"."Club"."stripeDetailsSubmitted", "public"."Club"."stripeRequirements", "public"."Club"."stripeCommissionRate", "public"."Club"."createdAt", "public"."Club"."updatedAt", "public"."Club"."approvedAt", "public"."Club"."approvedBy", "public"."Club"."whatsappNumber", "public"."Club"."initialSetupCompleted", "public"."Club"."initialSetupCompletedAt" FROM "public"."Club" WHERE "public"."Club"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/bookings/7a9493bf-0972-4497-aa38-2ccad5145296/split-payments 200 in 2517ms
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 3072ms
 ✓ Compiled in 435ms (2568 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 2517ms
 ✓ Compiled in 427ms (2568 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 2791ms
 ✓ Compiled in 365ms (2568 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 2343ms
 ✓ Compiled in 364ms (2568 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 2504ms
 ✓ Compiled in 780ms (2169 modules)
[validateRequest] Cookie name: auth-session
[validateRequest] Session ID from cookie: 4soxmxqqrt2mcxww5zpbnfqt3hhb5v3w6npuqckg
[validateRequest] All cookies: [ 'auth-session', 'padelyzer-session', '__next_hmr_refresh_hash__' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Club"."id", "public"."Club"."name", "public"."Club"."status"::text, "public"."Club"."active" FROM "public"."Club" WHERE ("public"."Club"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."Session"."id", "public"."Session"."userId", "public"."Session"."expiresAt" FROM "public"."Session" WHERE ("public"."Session"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."password", "public"."User"."role"::text, "public"."User"."clubId", "public"."User"."active", "public"."User"."createdAt", "public"."User"."updatedAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[validateRequest] Session validation result: { hasSession: true, hasUser: true, sessionFresh: false }
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."User"."id", "public"."User"."role"::text, "public"."User"."clubId" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."UserPermission"."id", "public"."UserPermission"."moduleCode", "public"."UserPermission"."userId" FROM "public"."UserPermission" WHERE "public"."UserPermission"."userId" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."ClubPackage"."id", "public"."ClubPackage"."clubId", "public"."ClubPackage"."packageId", "public"."ClubPackage"."isActive", "public"."ClubPackage"."activatedAt", "public"."ClubPackage"."deactivatedAt", "public"."ClubPackage"."customPricing", "public"."ClubPackage"."notes", "public"."ClubPackage"."createdAt", "public"."ClubPackage"."updatedAt" FROM "public"."ClubPackage" WHERE ("public"."ClubPackage"."clubId" = $1 AND "public"."ClubPackage"."isActive" = $2) LIMIT $3 OFFSET $4
prisma:query COMMIT
 GET /c/club-demo-padelyzer/dashboard/bookings 200 in 2616ms
 ○ Compiling /_not-found ...
 ✓ Compiled /_not-found in 705ms (2160 modules)
 GET /c/club-demo-padelyzer/dashboard/bookings 404 in 907ms
[?25h
