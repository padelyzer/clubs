'use client'

import React, { useState, useEffect } from 'react'
import { CardModern } from '@/components/design-system/CardModern'
import { 
  Trophy, Users, Medal, Calendar, TrendingUp,
  DollarSign, Award, Target, Clock, MapPin,
  Download, Filter, Loader2, Star, Crown, ChevronLeft, ChevronRight, Home
} from 'lucide-react'
import { formatCurrency } from '@/lib/design-system/localization'
import { format } from 'date-fns'
import { es } from 'date-fns/locale'

interface TournamentTransaction {
  id: string
  tournamentName: string
  type: string
  category: string
  date: string
  participants: number
  maxParticipants: number
  entryFee: number
  prizeMoney: number
  totalRevenue: number
  status: string
  winner?: string
  reference: string
}

export default function TournamentsIncomeModule() {
  const [transactions, setTransactions] = useState<TournamentTransaction[]>([])
  const [loading, setLoading] = useState(true)
  const [selectedPeriod, setSelectedPeriod] = useState(new Date())
  const [activeFilter, setActiveFilter] = useState<'all' | 'upcoming' | 'ongoing' | 'completed'>('all')
  const [stats, setStats] = useState({
    totalTournaments: 0,
    totalParticipants: 0,
    totalRevenue: 0,
    totalPrizeMoney: 0,
    avgParticipants: 0,
    netRevenue: 0,
    popularCategory: '',
    biggestTournament: ''
  })

  useEffect(() => {
    fetchTournamentData()
  }, [selectedPeriod])

  const fetchTournamentData = async () => {
    try {
      setLoading(true)
      // Fetch tournament transactions
      const response = await fetch('/api/finance/transactions?type=INCOME&category=TOURNAMENT&period=year&limit=100')
      if (response.ok) {
        const data = await response.json()
        
        // Generate sample tournament data (since we may not have real tournament data yet)
        const tournamentTrans = data.transactions?.length > 0 ? 
          data.transactions.map((t: any) => mapTournamentTransaction(t)) :
          generateSampleTournaments()
        
        setTransactions(tournamentTrans)
        calculateStats(tournamentTrans)
      }
    } catch (error) {
      console.error('Error fetching tournament data:', error)
      // Use sample data as fallback
      const sampleData = generateSampleTournaments()
      setTransactions(sampleData)
      calculateStats(sampleData)
    } finally {
      setLoading(false)
    }
  }

  const mapTournamentTransaction = (t: any) => {
    const participants = Math.floor(Math.random() * 16) + 8
    const entryFee = 100000 // $1,000 MXN
    return {
      id: t.id,
      tournamentName: t.description || 'Torneo de Pádel',
      type: 'Eliminación',
      category: 'Open',
      date: t.date,
      participants,
      maxParticipants: 16,
      entryFee,
      prizeMoney: entryFee * participants * 0.7, // 70% goes to prizes
      totalRevenue: t.amount || entryFee * participants,
      status: 'completed',
      winner: 'Equipo A',
      reference: t.reference || t.id.substring(0, 8)
    }
  }

  const generateSampleTournaments = () => {
    const tournaments = [
      {
        id: '1',
        tournamentName: 'Torneo de Verano 2025',
        type: 'Round Robin',
        category: 'Open',
        date: new Date().toISOString(),
        participants: 24,
        maxParticipants: 32,
        entryFee: 150000,
        prizeMoney: 2000000,
        totalRevenue: 3600000,
        status: 'ongoing',
        reference: 'TORN-001'
      },
      {
        id: '2',
        tournamentName: 'Copa Pádel Élite',
        type: 'Eliminación Directa',
        category: 'Primera',
        date: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
        participants: 16,
        maxParticipants: 16,
        entryFee: 200000,
        prizeMoney: 2500000,
        totalRevenue: 3200000,
        status: 'completed',
        winner: 'López/García',
        reference: 'TORN-002'
      },
      {
        id: '3',
        tournamentName: 'Torneo Amateur',
        type: 'Grupos + Eliminación',
        category: 'Tercera',
        date: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(),
        participants: 8,
        maxParticipants: 16,
        entryFee: 75000,
        prizeMoney: 400000,
        totalRevenue: 600000,
        status: 'upcoming',
        reference: 'TORN-003'
      },
      {
        id: '4',
        tournamentName: 'Master Series Pádel',
        type: 'Eliminación',
        category: 'Master',
        date: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),
        participants: 32,
        maxParticipants: 32,
        entryFee: 100000,
        prizeMoney: 2200000,
        totalRevenue: 3200000,
        status: 'completed',
        winner: 'Martínez/Rodríguez',
        reference: 'TORN-004'
      }
    ]
    return tournaments
  }

  const calculateStats = (tournaments: TournamentTransaction[]) => {
    const filtered = tournaments.filter(t => 
      activeFilter === 'all' ||
      (activeFilter === 'upcoming' && t.status === 'upcoming') ||
      (activeFilter === 'ongoing' && t.status === 'ongoing') ||
      (activeFilter === 'completed' && t.status === 'completed')
    )
    
    const totalRevenue = filtered.reduce((sum: number, t) => sum + t.totalRevenue, 0)
    const totalPrizeMoney = filtered.reduce((sum: number, t) => sum + t.prizeMoney, 0)
    const totalParticipants = filtered.reduce((sum: number, t) => sum + t.participants, 0)
    
    // Find most popular category
    const categoryCounts = filtered.reduce((acc, t) => {
      acc[t.category] = (acc[t.category] || 0) + 1
      return acc
    }, {} as Record<string, number>)
    
    const popularCategory = Object.entries(categoryCounts).sort((a, b) => b[1] - a[1])[0]?.[0] || 'Open'
    
    // Find biggest tournament
    const biggestTournament = filtered.sort((a, b) => b.participants - a.participants)[0]?.tournamentName || 'N/A'
    
    setStats({
      totalTournaments: filtered.length,
      totalParticipants,
      totalRevenue,
      totalPrizeMoney,
      avgParticipants: filtered.length > 0 ? Math.round(totalParticipants / filtered.length) : 0,
      netRevenue: totalRevenue - totalPrizeMoney,
      popularCategory,
      biggestTournament
    })
  }

  if (loading) {
    return (
      <div style={{ 
        padding: '32px',
        display: 'flex', 
        justifyContent: 'center', 
        alignItems: 'center', 
        height: '400px' 
      }}>
        <Loader2 size={32} className="animate-spin" color="#66E7AA" />
      </div>
    )
  }

  return (
    <div style={{ padding: '32px' }}>
      {/* Breadcrumbs */}
      <div style={{ 
        display: 'flex', 
        alignItems: 'center', 
        gap: '8px',
        marginBottom: '24px',
        fontSize: '14px',
        color: '#516640'
      }}>
        <button
          onClick={() => window.dispatchEvent(new CustomEvent('navigate-to-income'))}
          style={{
            display: 'flex',
            alignItems: 'center',
            gap: '4px',
            background: 'none',
            border: 'none',
            color: '#516640',
            cursor: 'pointer',
            padding: 0,
            fontSize: '14px',
            transition: 'color 0.2s'
          }}
          onMouseEnter={(e) => {
            e.currentTarget.style.color = '#A4DF4E'
          }}
          onMouseLeave={(e) => {
            e.currentTarget.style.color = '#516640'
          }}
        >
          <Home style={{ width: '14px', height: '14px' }} />
          Ingresos
        </button>
        <ChevronRight style={{ width: '14px', height: '14px' }} />
        <span style={{ color: '#182A01', fontWeight: 500 }}>Torneos</span>
      </div>

      {/* Header */}
      <div style={{ marginBottom: '32px' }}>
        <h2 style={{
          fontSize: '28px',
          fontWeight: 700,
          color: '#182A01',
          margin: '0 0 8px 0'
        }}>
          Ingresos por Torneos
        </h2>
        <p style={{
          fontSize: '16px',
          color: '#516640'
        }}>
          Gestión de ingresos por torneos y competencias
        </p>
      </div>

      {/* Filter Tabs */}
      <div style={{ display: 'flex', gap: '8px', marginBottom: '24px' }}>
        {[
          { id: 'all', label: 'Todos', count: transactions.length },
          { id: 'upcoming', label: 'Próximos', count: transactions.filter(t => t.status === 'upcoming').length },
          { id: 'ongoing', label: 'En Curso', count: transactions.filter(t => t.status === 'ongoing').length },
          { id: 'completed', label: 'Finalizados', count: transactions.filter(t => t.status === 'completed').length }
        ].map(tab => (
          <button
            key={tab.id}
            onClick={() => {
              setActiveFilter(tab.id as any)
              calculateStats(transactions)
            }}
            style={{
              padding: '10px 20px',
              borderRadius: '10px',
              border: activeFilter === tab.id ? 'none' : '1px solid rgba(164, 223, 78, 0.2)',
              background: activeFilter === tab.id ? 'linear-gradient(135deg, #A4DF4E, #66E7AA)' : 'white',
              color: activeFilter === tab.id ? '#182A01' : '#516640',
              fontSize: '14px',
              fontWeight: activeFilter === tab.id ? 600 : 500,
              cursor: 'pointer',
              display: 'flex',
              alignItems: 'center',
              gap: '6px',
              transition: 'all 0.2s'
            }}
          >
            {tab.label}
            <span style={{
              background: activeFilter === tab.id ? 'rgba(24, 42, 1, 0.2)' : 'rgba(164, 223, 78, 0.1)',
              padding: '2px 6px',
              borderRadius: '12px',
              fontSize: '11px',
              fontWeight: 600
            }}>
              {tab.count}
            </span>
          </button>
        ))}
      </div>

      {/* Stats Cards */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: 'repeat(4, 1fr)',
        gap: '20px',
        marginBottom: '32px'
      }}>
        <CardModern variant="glass">
          <div style={{ padding: '24px' }}>
            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '12px' }}>
              <div style={{
                width: '40px',
                height: '40px',
                borderRadius: '10px',
                background: 'linear-gradient(135deg, #FFD700, #FFA500)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}>
                <Trophy style={{ width: '20px', height: '20px', color: 'white' }} />
              </div>
              <span style={{ fontSize: '12px', color: '#FFA500', fontWeight: 600 }}>
                {stats.totalTournaments}
              </span>
            </div>
            <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Torneos</p>
            <p style={{ fontSize: '24px', fontWeight: 700, color: '#182A01' }}>
              {formatCurrency(stats.totalRevenue / 100)}
            </p>
          </div>
        </CardModern>

        <CardModern variant="glass">
          <div style={{ padding: '24px' }}>
            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '12px' }}>
              <div style={{
                width: '40px',
                height: '40px',
                borderRadius: '10px',
                background: 'rgba(34, 197, 94, 0.1)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}>
                <Users style={{ width: '20px', height: '20px', color: '#22C55E' }} />
              </div>
              <span style={{ fontSize: '12px', color: '#22C55E', fontWeight: 600 }}>
                {stats.totalParticipants}
              </span>
            </div>
            <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Participantes</p>
            <p style={{ fontSize: '24px', fontWeight: 700, color: '#182A01' }}>
              {stats.avgParticipants} promedio
            </p>
          </div>
        </CardModern>

        <CardModern variant="glass">
          <div style={{ padding: '24px' }}>
            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '12px' }}>
              <div style={{
                width: '40px',
                height: '40px',
                borderRadius: '10px',
                background: 'rgba(239, 68, 68, 0.1)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}>
                <Medal style={{ width: '20px', height: '20px', color: '#EF4444' }} />
              </div>
            </div>
            <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Premios</p>
            <p style={{ fontSize: '24px', fontWeight: 700, color: '#182A01' }}>
              {formatCurrency(stats.totalPrizeMoney / 100)}
            </p>
          </div>
        </CardModern>

        <CardModern variant="glass">
          <div style={{ padding: '24px' }}>
            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '12px' }}>
              <div style={{
                width: '40px',
                height: '40px',
                borderRadius: '10px',
                background: 'rgba(164, 223, 78, 0.1)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}>
                <TrendingUp style={{ width: '20px', height: '20px', color: '#A4DF4E' }} />
              </div>
            </div>
            <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Ganancia Neta</p>
            <p style={{ fontSize: '24px', fontWeight: 700, color: '#182A01' }}>
              {formatCurrency(stats.netRevenue / 100)}
            </p>
          </div>
        </CardModern>
      </div>

      {/* Tournament Table */}
      <CardModern variant="glass">
        <div style={{ padding: '24px' }}>
          <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
            <h3 style={{ fontSize: '18px', fontWeight: 600, color: '#182A01' }}>
              Detalle de Torneos
            </h3>
            <button
              style={{
                padding: '8px 16px',
                borderRadius: '10px',
                border: 'none',
                background: 'linear-gradient(135deg, #A4DF4E, #66E7AA)',
                color: '#182A01',
                fontSize: '14px',
                fontWeight: 600,
                cursor: 'pointer',
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}
            >
              <Download style={{ width: '16px', height: '16px' }} />
              Exportar
            </button>
          </div>

          <div style={{ overflowX: 'auto' }}>
            <table style={{ width: '100%', borderCollapse: 'collapse' }}>
              <thead>
                <tr style={{ borderBottom: '2px solid rgba(164, 223, 78, 0.1)' }}>
                  <th style={{ padding: '12px', textAlign: 'left', fontSize: '12px', fontWeight: 600, color: '#516640' }}>TORNEO</th>
                  <th style={{ padding: '12px', textAlign: 'left', fontSize: '12px', fontWeight: 600, color: '#516640' }}>TIPO</th>
                  <th style={{ padding: '12px', textAlign: 'center', fontSize: '12px', fontWeight: 600, color: '#516640' }}>PARTICIPANTES</th>
                  <th style={{ padding: '12px', textAlign: 'center', fontSize: '12px', fontWeight: 600, color: '#516640' }}>FECHA</th>
                  <th style={{ padding: '12px', textAlign: 'center', fontSize: '12px', fontWeight: 600, color: '#516640' }}>ESTADO</th>
                  <th style={{ padding: '12px', textAlign: 'right', fontSize: '12px', fontWeight: 600, color: '#516640' }}>INSCRIPCIÓN</th>
                  <th style={{ padding: '12px', textAlign: 'right', fontSize: '12px', fontWeight: 600, color: '#516640' }}>PREMIOS</th>
                  <th style={{ padding: '12px', textAlign: 'right', fontSize: '12px', fontWeight: 600, color: '#516640' }}>TOTAL</th>
                </tr>
              </thead>
              <tbody>
                {transactions
                  .filter(t => 
                    activeFilter === 'all' ||
                    (activeFilter === 'upcoming' && t.status === 'upcoming') ||
                    (activeFilter === 'ongoing' && t.status === 'ongoing') ||
                    (activeFilter === 'completed' && t.status === 'completed')
                  )
                  .slice(0, 15)
                  .map((tournament, index) => (
                  <tr key={tournament.id} style={{ borderBottom: '1px solid rgba(164, 223, 78, 0.05)' }}>
                    <td style={{ padding: '16px 12px' }}>
                      <div>
                        <p style={{ fontSize: '14px', fontWeight: 600, color: '#182A01' }}>
                          {tournament.tournamentName}
                        </p>
                        <p style={{ fontSize: '12px', color: '#516640' }}>
                          {tournament.category}
                        </p>
                      </div>
                    </td>
                    <td style={{ padding: '16px 12px' }}>
                      <span style={{ fontSize: '14px', color: '#516640' }}>{tournament.type}</span>
                    </td>
                    <td style={{ padding: '16px 12px', textAlign: 'center' }}>
                      <span style={{ fontSize: '14px', fontWeight: 600, color: '#182A01' }}>
                        {tournament.participants}/{tournament.maxParticipants}
                      </span>
                    </td>
                    <td style={{ padding: '16px 12px', textAlign: 'center' }}>
                      <span style={{ fontSize: '14px', color: '#516640' }}>
                        {format(new Date(tournament.date), 'dd MMM', { locale: es })}
                      </span>
                    </td>
                    <td style={{ padding: '16px 12px', textAlign: 'center' }}>
                      <span style={{
                        fontSize: '12px',
                        padding: '4px 8px',
                        borderRadius: '6px',
                        background: tournament.status === 'completed' ? 'rgba(34, 197, 94, 0.1)' :
                                   tournament.status === 'ongoing' ? 'rgba(251, 191, 36, 0.1)' :
                                   'rgba(59, 130, 246, 0.1)',
                        color: tournament.status === 'completed' ? '#22C55E' :
                               tournament.status === 'ongoing' ? '#FBBF24' :
                               '#3B82F6'
                      }}>
                        {tournament.status === 'completed' ? 'Finalizado' :
                         tournament.status === 'ongoing' ? 'En Curso' : 'Próximo'}
                      </span>
                    </td>
                    <td style={{ padding: '16px 12px', textAlign: 'right' }}>
                      <span style={{ fontSize: '14px', color: '#516640' }}>
                        {formatCurrency(tournament.entryFee / 100)}
                      </span>
                    </td>
                    <td style={{ padding: '16px 12px', textAlign: 'right' }}>
                      <span style={{ fontSize: '14px', color: '#FBBF24', fontWeight: 600 }}>
                        {formatCurrency(tournament.prizeMoney / 100)}
                      </span>
                    </td>
                    <td style={{ padding: '16px 12px', textAlign: 'right' }}>
                      <span style={{ fontSize: '14px', fontWeight: 600, color: '#22C55E' }}>
                        {formatCurrency(tournament.totalRevenue / 100)}
                      </span>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </CardModern>

      {/* Tournament Cards Grid - Optional view */}
      <div style={{
        display: 'none', // Hidden by default, can be toggled
        gridTemplateColumns: 'repeat(2, 1fr)',
        gap: '20px',
        marginTop: '24px'
      }}>
        {transactions
          .filter(t => 
            activeFilter === 'all' ||
            (activeFilter === 'upcoming' && t.status === 'upcoming') ||
            (activeFilter === 'ongoing' && t.status === 'ongoing') ||
            (activeFilter === 'completed' && t.status === 'completed')
          )
          .slice(0, 6)
          .map((tournament) => (
          <CardModern key={tournament.id} variant="glass">
            <div style={{ padding: '24px' }}>
              {/* Header */}
              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start', marginBottom: '16px' }}>
                <div>
                  <h4 style={{ fontSize: '18px', fontWeight: 600, color: '#182A01', marginBottom: '4px' }}>
                    {tournament.tournamentName}
                  </h4>
                  <p style={{ fontSize: '14px', color: '#516640' }}>
                    {tournament.type} • {tournament.category}
                  </p>
                </div>
                <span style={{
                  padding: '4px 12px',
                  borderRadius: '20px',
                  fontSize: '12px',
                  fontWeight: 600,
                  background: tournament.status === 'completed' ? 'rgba(34, 197, 94, 0.1)' :
                             tournament.status === 'ongoing' ? 'rgba(251, 191, 36, 0.1)' :
                             'rgba(59, 130, 246, 0.1)',
                  color: tournament.status === 'completed' ? '#22C55E' :
                         tournament.status === 'ongoing' ? '#FBBF24' :
                         '#3B82F6'
                }}>
                  {tournament.status === 'completed' ? 'Finalizado' :
                   tournament.status === 'ongoing' ? 'En Curso' : 'Próximo'}
                </span>
              </div>

              {/* Stats Grid */}
              <div style={{ 
                display: 'grid', 
                gridTemplateColumns: '1fr 1fr', 
                gap: '16px',
                marginBottom: '16px'
              }}>
                <div>
                  <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Participantes</p>
                  <p style={{ fontSize: '16px', fontWeight: 600, color: '#182A01' }}>
                    {tournament.participants}/{tournament.maxParticipants}
                  </p>
                </div>
                <div>
                  <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Inscripción</p>
                  <p style={{ fontSize: '16px', fontWeight: 600, color: '#182A01' }}>
                    {formatCurrency(tournament.entryFee / 100)}
                  </p>
                </div>
                <div>
                  <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Premios</p>
                  <p style={{ fontSize: '16px', fontWeight: 600, color: '#FBBF24' }}>
                    {formatCurrency(tournament.prizeMoney / 100)}
                  </p>
                </div>
                <div>
                  <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Ingresos</p>
                  <p style={{ fontSize: '16px', fontWeight: 600, color: '#22C55E' }}>
                    {formatCurrency(tournament.totalRevenue / 100)}
                  </p>
                </div>
              </div>

              {/* Footer */}
              <div style={{ 
                borderTop: '1px solid rgba(164, 223, 78, 0.1)', 
                paddingTop: '12px',
                display: 'flex',
                justifyContent: 'space-between',
                alignItems: 'center'
              }}>
                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                  <Calendar style={{ width: '14px', height: '14px', color: '#516640' }} />
                  <span style={{ fontSize: '13px', color: '#516640' }}>
                    {format(new Date(tournament.date), "dd 'de' MMMM", { locale: es })}
                  </span>
                </div>
                {tournament.winner && (
                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                    <Crown style={{ width: '14px', height: '14px', color: '#FFD700' }} />
                    <span style={{ fontSize: '13px', fontWeight: 600, color: '#182A01' }}>
                      {tournament.winner}
                    </span>
                  </div>
                )}
              </div>
            </div>
          </CardModern>
        ))}
      </div>
    </div>
  )
}