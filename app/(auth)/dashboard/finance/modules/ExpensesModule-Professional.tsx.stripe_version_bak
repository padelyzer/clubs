'use client'

import React, { useState, useEffect } from 'react'
import { CardModern } from '@/components/design-system/CardModern'
import {
  Plus, Search, Filter, Download, TrendingDown,
  Receipt, Home, Zap, Wifi, Wrench, Building2,
  Eye, Edit, ChevronLeft, ChevronRight, FileText,
  DollarSign, Clock, AlertCircle
} from 'lucide-react'
import { formatCurrency } from '@/lib/design-system/localization'
import { format } from 'date-fns'
import { es } from 'date-fns/locale'
import { FinanceLoader } from '@/components/finance/FinanceLoader'

interface Expense {
  id: string
  category: string
  description: string
  amount: number
  date: string
  vendor?: string
  status: 'completed' | 'pending' | 'approved'
  type: 'fixed' | 'variable'
}

export default function ExpensesModuleProfessional() {
  const [searchQuery, setSearchQuery] = useState('')
  const [selectedPeriod, setSelectedPeriod] = useState(new Date())
  const [activeTab, setActiveTab] = useState<'all' | 'fixed' | 'variable'>('all')
  const [expenses, setExpenses] = useState<Expense[]>([])
  const [loading, setLoading] = useState(true)
  const [exporting, setExporting] = useState(false)

  useEffect(() => {
    fetchExpenses()
  }, [selectedPeriod])

  const fetchExpenses = async () => {
    try {
      setLoading(true)
      const response = await fetch('/api/finance/expenses?period=month')
      if (response.ok) {
        const data = await response.json()
        const mappedExpenses: Expense[] = data.expenses?.map((e: any) => ({
          id: e.id,
          category: e.category || 'General',
          description: e.description || '',
          amount: e.amount || 0,
          date: e.date,
          vendor: e.vendor,
          status: e.status === 'paid' ? 'completed' : e.status === 'pending' ? 'pending' : 'approved',
          type: ['RENT', 'UTILITIES', 'INSURANCE'].includes(e.category) ? 'fixed' : 'variable'
        })) || []
        setExpenses(mappedExpenses)
      }
    } catch (error) {
      console.error('Error fetching expenses:', error)
    } finally {
      setLoading(false)
    }
  }

  const handleExport = async () => {
    try {
      setExporting(true)
      const period = format(selectedPeriod, 'yyyy-MM')
      const response = await fetch(`/api/finance/export?type=expenses&format=csv&period=${period}`)
      
      if (response.ok) {
        const blob = await response.blob()
        const url = window.URL.createObjectURL(blob)
        const a = document.createElement('a')
        a.style.display = 'none'
        a.href = url
        a.download = `gastos-${period}.csv`
        document.body.appendChild(a)
        a.click()
        window.URL.revokeObjectURL(url)
      }
    } catch (error) {
      console.error('Error exporting expenses:', error)
    } finally {
      setExporting(false)
    }
  }

  const totalExpenses = expenses.reduce((sum: number, e) => sum + e.amount, 0)
  const fixedExpenses = expenses.filter(e => e.type === 'fixed').reduce((sum: number, e) => sum + e.amount, 0)
  const variableExpenses = expenses.filter(e => e.type === 'variable').reduce((sum: number, e) => sum + e.amount, 0)
  const pendingExpenses = expenses.filter(e => e.status === 'pending').reduce((sum: number, e) => sum + e.amount, 0)

  const getCategoryIcon = (category: string) => {
    switch (category.toLowerCase()) {
      case 'renta': return <Home style={{ width: '20px', height: '20px', color: '#EF4444' }} />
      case 'electricidad': return <Zap style={{ width: '20px', height: '20px', color: '#EF4444' }} />
      case 'internet': return <Wifi style={{ width: '20px', height: '20px', color: '#EF4444' }} />
      case 'mantenimiento': return <Wrench style={{ width: '20px', height: '20px', color: '#EF4444' }} />
      default: return <Receipt style={{ width: '20px', height: '20px', color: '#EF4444' }} />
    }
  }

  const fixedExpensesList = expenses
    .filter(e => e.type === 'fixed')
    .slice(0, 5)
    .map(e => ({
      name: e.description || e.category,
      amount: e.amount,
      dueDay: new Date(e.date).getDate(),
      icon: getCategoryIcon(e.category),
      status: e.status === 'completed' ? 'paid' : e.status === 'pending' ? 'pending' : 'upcoming'
    }))

  const filteredExpenses = activeTab === 'all'
    ? expenses
    : expenses.filter(e => e.type === activeTab)

  // Si está cargando, mostrar el loader
  if (loading) {
    return (
      <FinanceLoader
        title="Gastos"
        subtitle="Control y gestión de gastos del club"
        selectedPeriod={selectedPeriod}
        skeletonType="cards"
      />
    )
  }

  return (
    <div style={{ padding: '32px' }}>
      {/* Header */}
      <div style={{ marginBottom: '32px' }}>
        <h1 style={{
          fontSize: '32px',
          fontWeight: 700,
          color: '#182A01',
          margin: '0 0 8px 0',
          letterSpacing: '-0.02em'
        }}>
          Gastos
        </h1>
        <p style={{
          fontSize: '16px',
          color: '#516640',
          fontWeight: 400,
          margin: 0
        }}>
          Control y gestión de gastos del club
        </p>
      </div>

      {/* Métricas */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: 'repeat(4, 1fr)',
        gap: '20px',
        marginBottom: '32px'
      }}>
        <CardModern variant="glass">
          <div style={{ padding: '24px' }}>
            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '12px' }}>
              <div style={{
                width: '40px',
                height: '40px',
                borderRadius: '10px',
                background: 'rgba(239, 68, 68, 0.1)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}>
                <TrendingDown style={{ width: '20px', height: '20px', color: '#EF4444' }} />
              </div>
              <span style={{ fontSize: '12px', color: '#EF4444', fontWeight: 600 }}>+8%</span>
            </div>
            <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Total Gastos</p>
            <p style={{ fontSize: '24px', fontWeight: 700, color: '#182A01' }}>
              {formatCurrency(totalExpenses)}
            </p>
          </div>
        </CardModern>

        <CardModern variant="glass">
          <div style={{ padding: '24px' }}>
            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '12px' }}>
              <div style={{
                width: '40px',
                height: '40px',
                borderRadius: '10px',
                background: 'rgba(59, 130, 246, 0.1)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}>
                <Home style={{ width: '20px', height: '20px', color: '#3B82F6' }} />
              </div>
              <span style={{ fontSize: '12px', color: '#516640', fontWeight: 600 }}>72%</span>
            </div>
            <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Gastos Fijos</p>
            <p style={{ fontSize: '24px', fontWeight: 700, color: '#182A01' }}>
              {formatCurrency(fixedExpenses)}
            </p>
          </div>
        </CardModern>

        <CardModern variant="glass">
          <div style={{ padding: '24px' }}>
            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '12px' }}>
              <div style={{
                width: '40px',
                height: '40px',
                borderRadius: '10px',
                background: 'rgba(147, 51, 234, 0.1)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}>
                <Receipt style={{ width: '20px', height: '20px', color: '#9333EA' }} />
              </div>
              <span style={{ fontSize: '12px', color: '#516640', fontWeight: 600 }}>28%</span>
            </div>
            <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Gastos Variables</p>
            <p style={{ fontSize: '24px', fontWeight: 700, color: '#182A01' }}>
              {formatCurrency(variableExpenses)}
            </p>
          </div>
        </CardModern>

        <CardModern variant="glass">
          <div style={{ padding: '24px' }}>
            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '12px' }}>
              <div style={{
                width: '40px',
                height: '40px',
                borderRadius: '10px',
                background: 'rgba(251, 191, 36, 0.1)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}>
                <AlertCircle style={{ width: '20px', height: '20px', color: '#FBBF24' }} />
              </div>
              <span style={{ fontSize: '12px', color: '#FBBF24', fontWeight: 600 }}>
                1
              </span>
            </div>
            <p style={{ fontSize: '12px', color: '#516640', marginBottom: '4px' }}>Por Aprobar</p>
            <p style={{ fontSize: '24px', fontWeight: 700, color: '#182A01' }}>
              {formatCurrency(pendingExpenses)}
            </p>
          </div>
        </CardModern>
      </div>

      {/* Tabs */}
      <div style={{ 
        display: 'flex', 
        gap: '8px',
        marginBottom: '24px',
        borderBottom: '1px solid rgba(164, 223, 78, 0.1)',
        paddingBottom: '2px'
      }}>
        <button
          onClick={() => setActiveTab('all')}
          style={{
            padding: '10px 20px',
            background: 'transparent',
            border: 'none',
            color: activeTab === 'all' ? '#182A01' : '#516640',
            fontSize: '14px',
            fontWeight: activeTab === 'all' ? 600 : 500,
            cursor: 'pointer',
            borderBottom: activeTab === 'all' ? '2px solid #A4DF4E' : '2px solid transparent',
            transition: 'all 0.2s'
          }}
        >
          Todos los Gastos
        </button>
        <button
          onClick={() => setActiveTab('fixed')}
          style={{
            padding: '10px 20px',
            background: 'transparent',
            border: 'none',
            color: activeTab === 'fixed' ? '#182A01' : '#516640',
            fontSize: '14px',
            fontWeight: activeTab === 'fixed' ? 600 : 500,
            cursor: 'pointer',
            borderBottom: activeTab === 'fixed' ? '2px solid #A4DF4E' : '2px solid transparent',
            transition: 'all 0.2s'
          }}
        >
          Gastos Fijos
        </button>
        <button
          onClick={() => setActiveTab('variable')}
          style={{
            padding: '10px 20px',
            background: 'transparent',
            border: 'none',
            color: activeTab === 'variable' ? '#182A01' : '#516640',
            fontSize: '14px',
            fontWeight: activeTab === 'variable' ? 600 : 500,
            cursor: 'pointer',
            borderBottom: activeTab === 'variable' ? '2px solid #A4DF4E' : '2px solid transparent',
            transition: 'all 0.2s'
          }}
        >
          Gastos Variables
        </button>
      </div>

      {/* Content */}
      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr 380px',
        gap: '24px'
      }}>
        {/* Main Content */}
        <CardModern variant="glass">
          <div style={{ padding: '24px' }}>
            {/* Header */}
            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '20px' }}>
              <h3 style={{
                fontSize: '18px',
                fontWeight: 600,
                color: '#182A01'
              }}>
                {activeTab === 'all' && 'Lista de Gastos'}
                {activeTab === 'fixed' && 'Gastos Fijos Mensuales'}
                {activeTab === 'variable' && 'Gastos Variables'}
              </h3>
              <div style={{ display: 'flex', gap: '8px' }}>
                <button
                  style={{
                    padding: '8px 16px',
                    borderRadius: '10px',
                    border: '1px solid rgba(164, 223, 78, 0.2)',
                    background: 'white',
                    color: '#516640',
                    fontSize: '14px',
                    fontWeight: 500,
                    cursor: 'pointer',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '6px'
                  }}
                >
                  <Filter style={{ width: '14px', height: '14px' }} />
                  Filtrar
                </button>
                <button
                  style={{
                    padding: '8px 16px',
                    borderRadius: '10px',
                    border: 'none',
                    background: 'linear-gradient(135deg, #66E7AA 0%, #A4DF4E 100%)',
                    color: '#182A01',
                    fontSize: '14px',
                    fontWeight: 600,
                    cursor: 'pointer',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '6px'
                  }}
                >
                  <Plus style={{ width: '14px', height: '14px' }} />
                  Nuevo Gasto
                </button>
              </div>
            </div>

            {/* Search */}
            <div style={{ position: 'relative', marginBottom: '20px' }}>
              <Search style={{
                position: 'absolute',
                left: '12px',
                top: '50%',
                transform: 'translateY(-50%)',
                width: '16px',
                height: '16px',
                color: '#516640'
              }} />
              <input
                type="text"
                placeholder="Buscar por concepto, proveedor o categoría..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                style={{
                  width: '100%',
                  padding: '10px 12px 10px 36px',
                  borderRadius: '10px',
                  border: '1px solid rgba(164, 223, 78, 0.2)',
                  background: 'white',
                  fontSize: '14px',
                  color: '#182A01',
                  outline: 'none'
                }}
              />
            </div>

            {/* Content based on tab */}
            {activeTab === 'fixed' ? (
              <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                {fixedExpensesList.map((expense, index) => (
                  <div
                    key={index}
                    style={{
                      padding: '16px',
                      borderRadius: '12px',
                      border: '1px solid rgba(164, 223, 78, 0.15)',
                      background: 'rgba(255, 255, 255, 0.5)',
                      backdropFilter: 'blur(10px)',
                      transition: 'all 0.3s ease',
                      cursor: 'pointer'
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.borderColor = 'rgba(239, 68, 68, 0.3)'
                      e.currentTarget.style.transform = 'translateX(4px)'
                      e.currentTarget.style.background = 'rgba(255, 255, 255, 0.7)'
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.borderColor = 'rgba(164, 223, 78, 0.15)'
                      e.currentTarget.style.transform = 'translateX(0)'
                      e.currentTarget.style.background = 'rgba(255, 255, 255, 0.5)'
                    }}
                  >
                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
                      <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
                        <div style={{
                          width: '40px',
                          height: '40px',
                          borderRadius: '10px',
                          background: 'rgba(239, 68, 68, 0.1)',
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'center'
                        }}>
                          {React.cloneElement(expense.icon, { 
                            style: { width: '20px', height: '20px', color: '#EF4444' }
                          })}
                        </div>
                        <div>
                          <p style={{ 
                            fontSize: '14px', 
                            fontWeight: 600, 
                            color: '#182A01',
                            marginBottom: '4px'
                          }}>
                            {expense.name}
                          </p>
                          <p style={{ fontSize: '12px', color: '#516640' }}>
                            Vence el día {expense.dueDay} de cada mes
                          </p>
                        </div>
                      </div>
                      <div style={{ textAlign: 'right' }}>
                        <p style={{
                          fontSize: '16px',
                          fontWeight: 600,
                          color: '#EF4444'
                        }}>
                          -{formatCurrency(expense.amount)}
                        </p>
                        <span style={{
                          fontSize: '11px',
                          padding: '2px 8px',
                          borderRadius: '12px',
                          background: expense.status === 'paid' 
                            ? 'rgba(156, 163, 175, 0.1)'
                            : expense.status === 'pending'
                            ? 'rgba(239, 68, 68, 0.1)'
                            : 'rgba(251, 191, 36, 0.1)',
                          color: expense.status === 'paid'
                            ? '#6B7280'
                            : expense.status === 'pending'
                            ? '#EF4444'
                            : '#FBBF24'
                        }}>
                          {expense.status === 'paid' ? 'Pagado' : 
                           expense.status === 'pending' ? 'Pendiente' : 'Próximo'}
                        </span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>
                {filteredExpenses.map((expense, index) => (
                  <div
                    key={expense.id}
                    style={{
                      padding: '16px 0',
                      borderBottom: index < filteredExpenses.length - 1 ? '1px solid rgba(0, 0, 0, 0.06)' : 'none',
                      cursor: 'pointer',
                      transition: 'all 0.2s'
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.background = 'rgba(239, 68, 68, 0.02)'
                      e.currentTarget.style.paddingLeft = '20px'
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.background = 'transparent'
                      e.currentTarget.style.paddingLeft = '16px'
                    }}
                  >
                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
                      <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
                        <div style={{
                          width: '40px',
                          height: '40px',
                          borderRadius: '10px',
                          background: 'rgba(239, 68, 68, 0.1)',
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'center'
                        }}>
                          {getCategoryIcon(expense.category)}
                        </div>
                        <div>
                          <p style={{ 
                            fontSize: '14px', 
                            fontWeight: 600, 
                            color: '#182A01',
                            marginBottom: '4px'
                          }}>
                            {expense.description}
                          </p>
                          <p style={{ 
                            fontSize: '12px', 
                            color: '#516640' 
                          }}>
                            {expense.vendor} • {expense.category} • {format(new Date(expense.date), 'dd MMM', { locale: es })}
                          </p>
                        </div>
                      </div>
                      <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>
                        <div style={{ textAlign: 'right' }}>
                          <p style={{
                            fontSize: '16px',
                            fontWeight: 600,
                            color: '#EF4444'
                          }}>
                            -{formatCurrency(expense.amount)}
                          </p>
                          <span style={{
                            fontSize: '11px',
                            padding: '2px 8px',
                            borderRadius: '12px',
                            background: expense.status === 'completed' 
                              ? 'rgba(156, 163, 175, 0.1)' 
                              : expense.status === 'pending'
                              ? 'rgba(239, 68, 68, 0.1)'
                              : 'rgba(59, 130, 246, 0.1)',
                            color: expense.status === 'completed' 
                              ? '#6B7280' 
                              : expense.status === 'pending'
                              ? '#EF4444'
                              : '#3B82F6'
                          }}>
                            {expense.status === 'completed' ? 'Pagado' : 
                             expense.status === 'pending' ? 'Pendiente' : 'Aprobado'}
                          </span>
                        </div>
                        <div style={{ display: 'flex', gap: '4px' }}>
                          <button
                            style={{
                              width: '32px',
                              height: '32px',
                              borderRadius: '8px',
                              border: 'none',
                              background: 'transparent',
                              cursor: 'pointer',
                              display: 'flex',
                              alignItems: 'center',
                              justifyContent: 'center',
                              transition: 'all 0.2s'
                            }}
                            onMouseEnter={(e) => {
                              e.currentTarget.style.background = 'rgba(239, 68, 68, 0.1)'
                              e.currentTarget.style.transform = 'scale(1.1)'
                            }}
                            onMouseLeave={(e) => {
                              e.currentTarget.style.background = 'transparent'
                              e.currentTarget.style.transform = 'scale(1)'
                            }}
                          >
                            <Eye style={{ width: '16px', height: '16px', color: '#516640' }} />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </CardModern>

        {/* Sidebar */}
        <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>
          {/* Period Selector */}
          <CardModern variant="glass">
            <div style={{ padding: '24px' }}>
              <div style={{
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'space-between',
                marginBottom: '20px'
              }}>
                <h3 style={{
                  fontSize: '16px',
                  fontWeight: 600,
                  color: '#182A01'
                }}>
                  {format(selectedPeriod, 'MMMM yyyy', { locale: es })}
                </h3>
                <div style={{ display: 'flex', gap: '8px' }}>
                  <button
                    onClick={() => {
                      const newDate = new Date(selectedPeriod)
                      newDate.setMonth(newDate.getMonth() - 1)
                      setSelectedPeriod(newDate)
                    }}
                    style={{
                      width: '32px',
                      height: '32px',
                      borderRadius: '8px',
                      border: '1px solid rgba(164, 223, 78, 0.2)',
                      background: 'white',
                      cursor: 'pointer',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center'
                    }}
                  >
                    <ChevronLeft style={{ width: '16px', height: '16px', color: '#516640' }} />
                  </button>
                  <button
                    onClick={() => {
                      const newDate = new Date(selectedPeriod)
                      newDate.setMonth(newDate.getMonth() + 1)
                      setSelectedPeriod(newDate)
                    }}
                    style={{
                      width: '32px',
                      height: '32px',
                      borderRadius: '8px',
                      border: '1px solid rgba(164, 223, 78, 0.2)',
                      background: 'white',
                      cursor: 'pointer',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center'
                    }}
                  >
                    <ChevronRight style={{ width: '16px', height: '16px', color: '#516640' }} />
                  </button>
                </div>
              </div>

              <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                  <span style={{ fontSize: '14px', color: '#516640' }}>Gastos Fijos</span>
                  <span style={{ fontSize: '14px', fontWeight: 600, color: '#3B82F6' }}>
                    {formatCurrency(fixedExpenses)}
                  </span>
                </div>
                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                  <span style={{ fontSize: '14px', color: '#516640' }}>Gastos Variables</span>
                  <span style={{ fontSize: '14px', fontWeight: 600, color: '#9333EA' }}>
                    {formatCurrency(variableExpenses)}
                  </span>
                </div>
                <div style={{
                  borderTop: '1px solid rgba(164, 223, 78, 0.1)',
                  paddingTop: '12px',
                  display: 'flex',
                  justifyContent: 'space-between',
                  alignItems: 'center'
                }}>
                  <span style={{ fontSize: '14px', fontWeight: 600, color: '#182A01' }}>Total</span>
                  <span style={{ fontSize: '18px', fontWeight: 700, color: '#EF4444' }}>
                    -{formatCurrency(totalExpenses)}
                  </span>
                </div>
              </div>
            </div>
          </CardModern>

          {/* Quick Actions */}
          <CardModern variant="glass">
            <div style={{ padding: '24px' }}>
              <h3 style={{
                fontSize: '16px',
                fontWeight: 600,
                color: '#182A01',
                marginBottom: '16px'
              }}>
                Acciones Rápidas
              </h3>
              <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                <button
                  style={{
                    width: '100%',
                    padding: '12px 16px',
                    borderRadius: '10px',
                    border: '1px solid rgba(164, 223, 78, 0.2)',
                    background: 'white',
                    color: '#182A01',
                    fontSize: '14px',
                    fontWeight: 500,
                    cursor: 'pointer',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    transition: 'all 0.2s'
                  }}
                  onMouseEnter={(e) => {
                    e.currentTarget.style.background = 'rgba(164, 223, 78, 0.05)'
                  }}
                  onMouseLeave={(e) => {
                    e.currentTarget.style.background = 'white'
                  }}
                >
                  <FileText style={{ width: '16px', height: '16px' }} />
                  Subir Factura
                </button>
                <button
                  style={{
                    width: '100%',
                    padding: '12px 16px',
                    borderRadius: '10px',
                    border: '1px solid rgba(164, 223, 78, 0.2)',
                    background: 'white',
                    color: '#182A01',
                    fontSize: '14px',
                    fontWeight: 500,
                    cursor: 'pointer',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    transition: 'all 0.2s'
                  }}
                  onMouseEnter={(e) => {
                    e.currentTarget.style.background = 'rgba(164, 223, 78, 0.05)'
                  }}
                  onMouseLeave={(e) => {
                    e.currentTarget.style.background = 'white'
                  }}
                >
                  <Download style={{ width: '16px', height: '16px' }} />
                  Exportar
                </button>
              </div>
            </div>
          </CardModern>

          {/* Categorías de Gastos */}
          <CardModern variant="glass">
            <div style={{ padding: '24px' }}>
              <h3 style={{
                fontSize: '16px',
                fontWeight: 600,
                color: '#182A01',
                marginBottom: '16px'
              }}>
                Distribución por Categoría
              </h3>
              <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
                {[
                  { name: 'Renta', amount: 250000, percentage: 45, color: 'linear-gradient(90deg, #EF4444, #DC2626)' },
                  { name: 'Servicios', amount: 55000, percentage: 15, color: 'linear-gradient(90deg, #3B82F6, #2563EB)' },
                  { name: 'Mantenimiento', amount: 50000, percentage: 14, color: 'linear-gradient(90deg, #9333EA, #7C3AED)' },
                  { name: 'Insumos', amount: 15000, percentage: 8, color: 'linear-gradient(90deg, #FBBF24, #F59E0B)' }
                ].map((category, index) => (
                  <div key={index}>
                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '6px' }}>
                      <span style={{ fontSize: '13px', color: '#516640' }}>{category.name}</span>
                      <span style={{ fontSize: '13px', fontWeight: 600, color: '#182A01' }}>
                        {formatCurrency(category.amount)}
                      </span>
                    </div>
                    <div style={{
                      height: '6px',
                      background: 'rgba(164, 223, 78, 0.1)',
                      borderRadius: '3px',
                      overflow: 'hidden'
                    }}>
                      <div style={{
                        width: `${category.percentage}%`,
                        height: '100%',
                        background: category.color,
                        borderRadius: '3px',
                        transition: 'width 0.5s ease'
                      }} />
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </CardModern>
        </div>
      </div>
    </div>
  )
}